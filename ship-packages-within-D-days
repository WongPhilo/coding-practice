class Solution {
    static int leastWeightCapacity(int[] arr, int N, int D) {
        int tot = 0;
        int max = arr[0];
        for (int i = 0; i < arr.length; i++) {
            tot += arr[i];
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        
        int beg = max;
        int end = tot;
        while (beg <= end) {
            int mid = (beg + (end - beg) / 2);
            if (valid(arr, mid, D) == true) {
                end = (mid - 1);
            } else {
                beg = (mid + 1);
            }
        }
        return beg;
    }
    
    static boolean valid(int[] arr, int WC, int D) {
        int amount = 0;
        int days = 1;
        for (int a : arr) {
            amount += a;
            if (amount > WC) {
                amount = a;
                days++;
                if (days > D) {
                    return false;
                }
            }
        }
        return true;
    }
};
